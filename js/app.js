const btnsTabMenu=document.querySelectorAll(".tab-menu__btn"),tabMenuPanel=document.querySelectorAll(".tab-menu__panel"),error=document.getElementById("error"),search=document.getElementById("search"),btnSearch=document.getElementById("btn-search"),city=document.querySelectorAll("#city"),daysItemLink=document.querySelectorAll(".tab-menu__weather-days--link"),hourlyList=document.querySelectorAll(".tab-menu__hourly--list"),weatherDaysList=document.querySelector(".tab-menu__weather-days--list"),currentData=document.getElementById("current-data"),icon=document.querySelector(".tab-menu__img"),description=document.querySelector(".tab-menu__subtext"),temperature=document.querySelector(".tab-menu__heading"),realFeel=document.querySelector(".tab-menu__real-feel--name"),sunrise=document.querySelector(".tab-menu__sunrise--name"),sunset=document.querySelector(".tab-menu__sunset--name"),duration=document.querySelector(".tab-menu__duration--name"),nearestCityList=document.querySelector(".tab-menu__nearest-cities--list");class APIQuery{constructor(){}getQueryData=async e=>{const t=await fetch(e);if(!t.ok)throw new Error(`Ошибка по адресу <a class="error__link" href="${e}">${e}</a>, стутус ошибки ${t}`);return await t.json()};sendData=async(e,t)=>{const a=await fetch(e,t);if(!a.ok)throw new Error(`Ошибка по адресу ${e}, стутус ошибки ${a}`);return await a.json()};getError(e,t,a=""){t?(e.classList.add("active-error"),e.innerHTML=a):(e.classList.remove("active-error"),e.innerHTML="")}}class TabMenu{#e;#t;constructor(e,t){this.#e=e,this.#t=t}ActiveContentTabMenu=e=>{e.classList.contains("btn-active")||(e===this.#e[0]?(this.#e[0].classList.add("btn-active"),this.#e[1].classList.remove("btn-active"),this.#t[0].style.display="block",this.#t[1].style.display="none"):(this.#e[0].classList.remove("btn-active"),this.#e[1].classList.add("btn-active"),this.#t[0].style.display="none",this.#t[1].style.display="block"))}}class Weather{#a;#n;#r;#s="c04f46f774de2f467fa5443d7c7f9950";#i="ru";#o="metric";#c=8;constructor(){this.#a=new APIQuery,this.#n=new DateTimeWork}get(e="Kyiv"){const t=`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=${this.#o}&lang=${this.#i}&appid=${this.#s}`,a=`https://api.openweathermap.org/data/2.5/forecast?q=${e}&lang=${this.#i}&units=${this.#o}&cnt=${this.#c}&appid=${this.#s}`,n=`https://api.openweathermap.org/data/2.5/forecast?q=${e}&lang=${this.#i}&units=${this.#o}&cnt=40&appid=${this.#s}`;this.#a.getQueryData(t).then((e=>{this.#a.getError(error,!1),this.getCurrentForecast(e),this.getNearestCities(e.coord,20)})).catch((e=>{this.#a.getError(error,!0,e),console.error(e)})),this.#a.getQueryData(a).then((e=>{this.#a.getError(error,!1),this.getHourlyForecast(e)})).catch((e=>{this.#a.getError(error,!0,e),console.error(e)})),this.#a.getQueryData(n).then((e=>{this.#a.getError(error,!1),this.getForecastOnSixDay(e)})).catch((e=>{this.#a.getError(error,!0,e),console.error(e)}))}getCurrentForecast(e){const t=this.#n.getTime(1e3*e.sys.sunrise,!1),a=this.#n.getTime(1e3*e.sys.sunset,!1),n=this.#n.getDurationTime(1e3*e.sys.sunrise,1e3*e.sys.sunset,!1);currentData.textContent=this.#n.getDate(1e3*e.dt),city.forEach((t=>{t.innerHTML=`${e.name}`})),icon.src=`https://openweathermap.org/img/wn/${e.weather[0].icon}.png`,description.textContent=e.weather[0].description,temperature.textContent=`${Math.round(e.main.temp)}°C`,realFeel.innerHTML=`${Math.round(e.main.feels_like)}°C`,sunrise.innerHTML=`${t}`,sunset.innerHTML=`${a}`,duration.innerHTML=`${n}`}getHourlyForecast(e){const t=document.querySelectorAll(".tab-menu__hourly--list");for(let a=0;a<e.list.length;a++){const n=e.list[a];if(a<=6){let e=this.createHourlyElementLi(n);t.forEach((t=>{t.append(e.cloneNode(!0))}))}}}getNearestCities({lat:e,lon:t},a){const n=`https://api.openweathermap.org/data/2.5/find?type=like&lat=${e}&lon=${t}&cnt=${a}&lang=${this.#i}&units=${this.#o}&appid=${this.#s}`;this.#a.getQueryData(n).then((e=>{console.log(e),e.list=this.#l(e),this.#u(e)})).catch((e=>{this.#a.getError(error,!0,e),console.error(e)}))}getForecastOnSixDay(e){const t=document.querySelector(".tab-menu__weather-days--list");this.#r=this.filterDay(e);for(let e in this.#r){const a=this.createWeekDaysElement(e,this.#r);t.append(a)}document.querySelectorAll(".tab-menu__weather-days--link").forEach((t=>{t.addEventListener("click",(t=>{this.#h(e,t)}))}))}#u(e){nearestCityList.innerHTML="";for(let t=0;t<e.list.length;t++)if(t<9){const a=e.list[t],n=document.createElement("li");n.classList.add("tab-menu__nearest-cities--item"),n.innerHTML=`<a href="#" class="tab-menu__nearest-cities--link">\n                                <div class="tab-menu__nearest-cities--col">\n                                    <div class="tab-menu__nearest-cities--row">\n                                        <span class="tab-menu__nearest-cities--city">${a.name}</span>\n                                        <span class="tab-menu__nearest-cities--country">${a.sys.country}</span>\n                                    </div>\n                                    <div class="tab-menu__nearest-cities--row">\n                        \n                                        <div class="tab-menu__nearest-cities--main-temp">\n                                            <span class="tab-menu__nearest-cities--main-temp-title">Temp(&deg;C):</span>\n                                            <div class="tab-menu__nearest-cities--main-temp-name">${Math.round(a.main.temp)}&deg;C</div>\n                                        </div>\n                        \n                                        <div class="tab-menu__nearest-cities--real-feel">\n                                            <span class="tab-menu__nearest-cities--real-feel-title">RealFeel:</span>\n                                            <div class="tab-menu__nearest-cities--real-feel-name">${a.main.feels_like}&deg;C\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="tab-menu__nearest-cities--col">\n                                    <img class="tab-menu__nearest-cities--img"\n                                         src="https://openweathermap.org/img/wn/${a.weather[0].icon}.png" alt="">\n                                </div>\n                            </a>\n                            `,nearestCityList.append(n)}}#l(e){const t=e.list.map((e=>e.name));return[...new Set(t)].map((t=>({...e.list.find((e=>e.name===t))})))}#h(e,t){t.preventDefault();const a=t.target.closest(".tab-menu__weather-days--link");if(a){const t=a.firstElementChild.textContent;for(const a in this.#r){const n=this.#n.getWeekDayName(a);if("ToNight"===n&&this.#d(e.list.slice(0,7),0),t===n){const e=this.#r[a].slice(0,7);this.#d(e,1)}}}}#d=(e,t)=>{const a=document.querySelectorAll(".tab-menu__hourly--list");a[t].innerHTML="";for(const n of e){const e=this.createHourlyElementLi(n);a[t].append(e)}};createHourlyElementLi(e){const t=document.createElement("li"),a=new Date(e.dt_txt);return t.classList.add("tab-menu__hourly--item"),t.innerHTML=`<p class="tab-menu__hourly--time">${this.#n.getTime(a,!1)}</p>\n                        <img class="tab-menu__hourly--icon" src="https://openweathermap.org/img/wn/${e.weather[0].icon}.png" alt="img-icon-forecast"/>\n                        <p class="tab-menu__hourly--forecast">${e.weather[0].description.replace(" ","<br>")}</p>\n                        <p class="tab-menu__hourly--temp">${Math.round(e.main.temp)}&deg;</p>\n                        <p class="tab-menu__hourly--real-feel">${Math.round(e.main.feels_like)}&deg;</p>\n                        <p class="tab-menu__hourly--wind">${Math.round(e.wind.speed)} ${this.getWindFormat(e.wind.deg)}</p>\n                        `,t}createWeekDaysElement(e,t){const a=document.createElement("li");a.classList.add("tab-menu__weather-days--item");const n=this.#n.getWeekDayName(e),r=new Date(e).toLocaleString("default",{month:"long"}),s=new Date(e).getDate(),i=`https://openweathermap.org/img/wn/${t[e][0].weather[0].icon}.png`,o=Math.round(t[e][0].main.temp),c=t[e][0].weather[0].description.replace(" ","<br>");return a.innerHTML=`<a href="#" class="tab-menu__weather-days--link">\n                                <h2 class="tab-menu__weather-days--title title">${n}</h2>\n                                <p class="tab-menu__weather-days--data">\n                                    <span class="tab-menu__weather-days--year">${r}</span>\n                                    <span class="tab-menu__weather-days--day">${s}</span>\n                                </p>\n                                <img class="tab-menu__weather-days--img" src="${i}" alt="icon-forecast">\n                                <p class="tab-menu__weather-days--temp">${o}&deg;C</p>\n                                <p class="tab-menu__weather-days--forecast">${c}</p>\n                            </a>\n                            `,a}getWindFormat(e){switch(!0){case e>=0&&e<45:return"N";case e>=45&&e<90:return"NE";case e>=90&&e<135:return"E";case e>=135&&e<180:return"SE";case e>=180&&e<225:return"S";case e>=225&&e<270:return"SW";case e>=270&&e<315:return"W";case e>=315&&e<360:return"NW";default:return"N"}}refreshWeather(){hourlyList.forEach((e=>{e.innerHTML=""})),weatherDaysList.innerHTML=""}filterDay(e){const t={};return e.list.forEach((e=>{const a=e.dt_txt.split(" ")[0];t[a]?t[a].push(e):t[a]=[e]})),t}}class DateTimeWork{days=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"];getDate(e=0){let t=0===e?new Date:new Date(e);const a=t.getMonth()+1>9?`${t.getMonth()+1}`:`0${t.getMonth()+1}`;return`${t.getDate()}.${a}.${t.getFullYear()}`}getTime(e=0,t=!0){let a=0===e?new Date:new Date(e);const n=this.#m(a.getHours()),r=this.#m(a.getMinutes()),s=this.#m(a.getSeconds());return!0===t?`${n}:${r}:${s}`:`${n}:${r}`}getDurationTime(e,t,a=!0){const n=t-e,r=Math.floor(n/36e5),s=Math.floor(n%36e5/6e4),i=Math.floor(n%6e4/1e3);return!0===a?`${r}:${s}:${i}`:`${r}:${s}`}getWeekDayName(e){return this.getDate(e)===this.getDate()?"ToNight":this.days[new Date(e).getDay()]}#m(e){return e>9?`${e}`:`0${e}`}}const tabMenu=new TabMenu(btnsTabMenu,tabMenuPanel),weather=new Weather;window.addEventListener("load",(e=>{btnsTabMenu[0].classList.add("btn-active"),tabMenuPanel[1].style.display="none",weather.get("Kyiv")})),btnsTabMenu.forEach((e=>{e.addEventListener("click",(t=>{tabMenu.ActiveContentTabMenu(e)}))})),btnSearch.addEventListener("click",(e=>{""===search.value||" "===search.value||null===search.value||void 0===search.value?(weather.refreshWeather(),weather.get("Kyiv"),console.clear()):(weather.refreshWeather(),weather.get(search.value))})),search.addEventListener("input",(e=>{""!==search.value&&" "!==search.value&&null!==search.value&&void 0!==search.value||(weather.refreshWeather(),weather.get("Kyiv"),console.clear())}));