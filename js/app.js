const btnsTabMenu=document.querySelectorAll(".tab-menu__btn"),tabMenuPanel=document.querySelectorAll(".tab-menu__panel"),a=document.querySelectorAll("a"),search=document.getElementById("search"),btnSearch=document.getElementById("btn-search");class APIQuery{constructor(){}getQueryData=async e=>{const t=await fetch(e);if(!t.ok)throw new Error(`Ошибка по адресу ${e}, стутус ошибки ${t}`);return await t.json()};sendData=async(e,t)=>{const n=await fetch(e,t);if(!n.ok)throw new Error(`Ошибка по адресу ${e}, стутус ошибки ${n}`);return await n.json()}}class TabMenu{#e;#t;constructor(e,t){this.#e=e,this.#t=t}ActiveContentTabMenu=e=>{e.classList.contains("btn-active")||(e===this.#e[0]?(this.#e[0].classList.add("btn-active"),this.#e[1].classList.remove("btn-active"),this.#t[0].style.display="block",this.#t[1].style.display="none"):(this.#e[0].classList.remove("btn-active"),this.#e[1].classList.add("btn-active"),this.#t[0].style.display="none",this.#t[1].style.display="block"))}}class Weather{#n;#a;static city;constructor(){this.#n=new APIQuery,this.#a=new TimeWork}get(e){const t="c04f46f774de2f467fa5443d7c7f9950",n=`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=metric&lang=ru&appid=${t}`,a=`https://api.openweathermap.org/data/2.5/forecast?q=${e}&lang=ru&units=metric&cnt=8&appid=${t}`;this.#n.getQueryData(n).then((e=>{this.getCurrentForecast(e)})).catch((e=>{console.error(e),alert(e)})),this.#n.getQueryData(a).then((e=>{this.getHourlyForecast(e)})).catch((e=>{console.error(e),alert(e)}))}getCurrentForecast(e){const t=document.getElementById("current-data"),n=document.getElementById("city"),a=document.querySelector(".tab-menu__img"),r=document.querySelector(".tab-menu__subtext"),s=document.querySelector(".tab-menu__heading"),o=document.querySelector(".tab-menu__real-feel"),u=document.querySelector(".tab-menu__sunrise"),i=document.querySelector(".tab-menu__sunset"),c=document.querySelector(".tab-menu__duration"),l=this.#a.getTime(1e3*e.sys.sunrise,!1),h=this.#a.getTime(1e3*e.sys.sunset,!1),m=this.#a.getDurationTime(1e3*e.sys.sunrise,1e3*e.sys.sunset,!1);return d=this.#a,t.textContent=d.getDate(1e3*e.dt),n.innerHTML=`<span class="tab-menu__hourly--city-name title">City: </span>${e.name}`,a.src=`https://openweathermap.org/img/wn/${e.weather[0].icon}.png`,r.textContent=e.weather[0].description,s.textContent=`${Math.round(e.main.temp)}°C`,o.innerHTML=`<span>Real Feel: </span>${Math.round(e.main.feels_like)}°C`,u.innerHTML=`<span class="tab-menu__text">Sunrise: </span>${l}`,i.innerHTML=`<span class="tab-menu__text">Sunset: </span>${h}`,void(c.innerHTML=`<span class="tab-menu__text">Duration: </span>${m}`);var d}getHourlyForecast(e){const t=document.querySelector(".tab-menu__hourly--list");for(let n=0;n<e.list.length;n++){const a=e.list[n];if(n<=5){const e=new Date(a.dt_txt);t.innerHTML+=`<li class="tab-menu__hourly--item">\n                                    <p class="tab-menu__hourly--time">${this.#a.getTime(e,!1)}</p>\n                                    <img class="tab-menu__hourly--icon" src="https://openweathermap.org/img/wn/${a.weather[0].icon}.png" alt="img-icon-forecast"/>\n                                    <p class="tab-menu__hourly--forecast">${a.weather[0].description}</p>\n                                    <p class="tab-menu__hourly--temp">${Math.round(a.main.temp)}&deg;</p>\n                                    <p class="tab-menu__hourly--real-feel">${Math.round(a.main.feels_like)}&deg;</p>\n                                    <p class="tab-menu__hourly--wind">${Math.round(a.wind.speed)} ${this.getWindFormat(a.wind.deg)}</p>\n                                </li>`}}}getWindFormat(e){switch(!0){case e>=0&&e<45:return"N";case e>=45&&e<90:return"NE";case e>=90&&e<135:return"E";case e>=135&&e<180:return"SE";case e>=180&&e<225:return"S";case e>=225&&e<270:return"SW";case e>=270&&e<315:return"W";case e>=315&&e<360:return"NW";default:return"N"}}}class TimeWork{getDate(e=0){let t=0===e?new Date:new Date(e);const n=t.getMonth()+1>9?`${t.getMonth()+1}`:`0${t.getMonth()+1}`;return`${t.getDate()}.${n}.${t.getFullYear()}`}getTime(e=0,t=!0){let n=0===e?new Date:new Date(e);const a=this.#r(n.getHours()),r=this.#r(n.getMinutes()),s=this.#r(n.getSeconds());return!0===t?`${a}:${r}:${s}`:`${a}:${r}`}getDurationTime(e,t,n=!0){const a=t-e,r=Math.floor(a/36e5),s=Math.floor(a%36e5/6e4),o=Math.floor(a%6e4/1e3);return!0===n?`${r}:${s}:${o}`:`${r}:${s}`}#r(e){return e>9?`${e}`:`0${e}`}}const tabMenu=new TabMenu(btnsTabMenu,tabMenuPanel),weather=new Weather;window.addEventListener("load",(e=>{btnsTabMenu[0].classList.add("btn-active"),tabMenuPanel[1].style.display="none",weather.get("Kyiv")})),btnsTabMenu.forEach((e=>{e.addEventListener("click",(t=>{tabMenu.ActiveContentTabMenu(e)}))})),a.forEach((e=>{e.addEventListener("click",(e=>{e.preventDefault()}))})),btnSearch.addEventListener("click",(e=>{Weather.city=search.value,weather.get(Weather.city)}));